//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParkingTestClient.ParkingInfoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Site", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Site : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private int MaxOccupancyField;
        
        private int OccupancyField;
        
        private int HysteresField;
        
        private int MarginalField;
        
        private bool ActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int MaxOccupancy {
            get {
                return this.MaxOccupancyField;
            }
            set {
                if ((this.MaxOccupancyField.Equals(value) != true)) {
                    this.MaxOccupancyField = value;
                    this.RaisePropertyChanged("MaxOccupancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Occupancy {
            get {
                return this.OccupancyField;
            }
            set {
                if ((this.OccupancyField.Equals(value) != true)) {
                    this.OccupancyField = value;
                    this.RaisePropertyChanged("Occupancy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Hysteres {
            get {
                return this.HysteresField;
            }
            set {
                if ((this.HysteresField.Equals(value) != true)) {
                    this.HysteresField = value;
                    this.RaisePropertyChanged("Hysteres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Marginal {
            get {
                return this.MarginalField;
            }
            set {
                if ((this.MarginalField.Equals(value) != true)) {
                    this.MarginalField = value;
                    this.RaisePropertyChanged("Marginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sign", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Sign : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ParkingTestClient.ParkingInfoService.Site[] SitesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string CurrentMessage {
            get {
                return this.CurrentMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentMessageField, value) != true)) {
                    this.CurrentMessageField = value;
                    this.RaisePropertyChanged("CurrentMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public ParkingTestClient.ParkingInfoService.Site[] Sites {
            get {
                return this.SitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SitesField, value) != true)) {
                    this.SitesField = value;
                    this.RaisePropertyChanged("Sites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ParkingInfoService.ParkingInfoSoap")]
    public interface ParkingInfoSoap {
        
        // CODEGEN: Generating message contract since element name userName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSites", ReplyAction="*")]
        ParkingTestClient.ParkingInfoService.ListSitesResponse ListSites(ParkingTestClient.ParkingInfoService.ListSitesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSites", ReplyAction="*")]
        System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSitesResponse> ListSitesAsync(ParkingTestClient.ParkingInfoService.ListSitesRequest request);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSigns", ReplyAction="*")]
        ParkingTestClient.ParkingInfoService.ListSignsResponse ListSigns(ParkingTestClient.ParkingInfoService.ListSignsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListSigns", ReplyAction="*")]
        System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSignsResponse> ListSignsAsync(ParkingTestClient.ParkingInfoService.ListSignsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListSitesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListSites", Namespace="http://tempuri.org/", Order=0)]
        public ParkingTestClient.ParkingInfoService.ListSitesRequestBody Body;
        
        public ListSitesRequest() {
        }
        
        public ListSitesRequest(ParkingTestClient.ParkingInfoService.ListSitesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ListSitesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public ListSitesRequestBody() {
        }
        
        public ListSitesRequestBody(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListSitesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListSitesResponse", Namespace="http://tempuri.org/", Order=0)]
        public ParkingTestClient.ParkingInfoService.ListSitesResponseBody Body;
        
        public ListSitesResponse() {
        }
        
        public ListSitesResponse(ParkingTestClient.ParkingInfoService.ListSitesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ListSitesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ParkingTestClient.ParkingInfoService.Site[] ListSitesResult;
        
        public ListSitesResponseBody() {
        }
        
        public ListSitesResponseBody(ParkingTestClient.ParkingInfoService.Site[] ListSitesResult) {
            this.ListSitesResult = ListSitesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListSignsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListSigns", Namespace="http://tempuri.org/", Order=0)]
        public ParkingTestClient.ParkingInfoService.ListSignsRequestBody Body;
        
        public ListSignsRequest() {
        }
        
        public ListSignsRequest(ParkingTestClient.ParkingInfoService.ListSignsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ListSignsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public ListSignsRequestBody() {
        }
        
        public ListSignsRequestBody(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ListSignsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ListSignsResponse", Namespace="http://tempuri.org/", Order=0)]
        public ParkingTestClient.ParkingInfoService.ListSignsResponseBody Body;
        
        public ListSignsResponse() {
        }
        
        public ListSignsResponse(ParkingTestClient.ParkingInfoService.ListSignsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ListSignsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ParkingTestClient.ParkingInfoService.Sign[] ListSignsResult;
        
        public ListSignsResponseBody() {
        }
        
        public ListSignsResponseBody(ParkingTestClient.ParkingInfoService.Sign[] ListSignsResult) {
            this.ListSignsResult = ListSignsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ParkingInfoSoapChannel : ParkingTestClient.ParkingInfoService.ParkingInfoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParkingInfoSoapClient : System.ServiceModel.ClientBase<ParkingTestClient.ParkingInfoService.ParkingInfoSoap>, ParkingTestClient.ParkingInfoService.ParkingInfoSoap {
        
        public ParkingInfoSoapClient() {
        }
        
        public ParkingInfoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ParkingInfoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParkingInfoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParkingInfoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ParkingTestClient.ParkingInfoService.ListSitesResponse ParkingTestClient.ParkingInfoService.ParkingInfoSoap.ListSites(ParkingTestClient.ParkingInfoService.ListSitesRequest request) {
            return base.Channel.ListSites(request);
        }
        
        public ParkingTestClient.ParkingInfoService.Site[] ListSites(string userName, string password) {
            ParkingTestClient.ParkingInfoService.ListSitesRequest inValue = new ParkingTestClient.ParkingInfoService.ListSitesRequest();
            inValue.Body = new ParkingTestClient.ParkingInfoService.ListSitesRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            ParkingTestClient.ParkingInfoService.ListSitesResponse retVal = ((ParkingTestClient.ParkingInfoService.ParkingInfoSoap)(this)).ListSites(inValue);
            return retVal.Body.ListSitesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSitesResponse> ParkingTestClient.ParkingInfoService.ParkingInfoSoap.ListSitesAsync(ParkingTestClient.ParkingInfoService.ListSitesRequest request) {
            return base.Channel.ListSitesAsync(request);
        }
        
        public System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSitesResponse> ListSitesAsync(string userName, string password) {
            ParkingTestClient.ParkingInfoService.ListSitesRequest inValue = new ParkingTestClient.ParkingInfoService.ListSitesRequest();
            inValue.Body = new ParkingTestClient.ParkingInfoService.ListSitesRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            return ((ParkingTestClient.ParkingInfoService.ParkingInfoSoap)(this)).ListSitesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ParkingTestClient.ParkingInfoService.ListSignsResponse ParkingTestClient.ParkingInfoService.ParkingInfoSoap.ListSigns(ParkingTestClient.ParkingInfoService.ListSignsRequest request) {
            return base.Channel.ListSigns(request);
        }
        
        public ParkingTestClient.ParkingInfoService.Sign[] ListSigns(string userName, string password) {
            ParkingTestClient.ParkingInfoService.ListSignsRequest inValue = new ParkingTestClient.ParkingInfoService.ListSignsRequest();
            inValue.Body = new ParkingTestClient.ParkingInfoService.ListSignsRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            ParkingTestClient.ParkingInfoService.ListSignsResponse retVal = ((ParkingTestClient.ParkingInfoService.ParkingInfoSoap)(this)).ListSigns(inValue);
            return retVal.Body.ListSignsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSignsResponse> ParkingTestClient.ParkingInfoService.ParkingInfoSoap.ListSignsAsync(ParkingTestClient.ParkingInfoService.ListSignsRequest request) {
            return base.Channel.ListSignsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ParkingTestClient.ParkingInfoService.ListSignsResponse> ListSignsAsync(string userName, string password) {
            ParkingTestClient.ParkingInfoService.ListSignsRequest inValue = new ParkingTestClient.ParkingInfoService.ListSignsRequest();
            inValue.Body = new ParkingTestClient.ParkingInfoService.ListSignsRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            return ((ParkingTestClient.ParkingInfoService.ParkingInfoSoap)(this)).ListSignsAsync(inValue);
        }
    }
}
